<Type Name="TorchSharpCatalog" FullName="Microsoft.ML.TorchSharp.TorchSharpCatalog">
  <TypeSignature Language="C#" Value="public static class TorchSharpCatalog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TorchSharpCatalog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ML.TorchSharp.TorchSharpCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Module TorchSharpCatalog" />
  <TypeSignature Language="F#" Value="type TorchSharpCatalog = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Collection of extension methods for <see cref="T:Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers" /> to create instances of TorchSharp trainer components.
            </summary>
    <remarks>
            This requires additional nuget dependencies to link against TorchSharp native dlls. See <see cref="T:Microsoft.ML.Vision.ImageClassificationTrainer" /> for more information.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="TextClassification">
      <MemberSignature Language="C#" Value="public static Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer TextClassification (this Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers catalog, string labelColumnName = &quot;Label&quot;, string outputColumnName = &quot;PredictedLabel&quot;, string sentence1ColumnName = &quot;Sentence1&quot;, string sentence2ColumnName = default, int numberOfClasses = 2, int batchSize = 32, int maxEpochs = 10, int maxUpdates = 2147483647, Microsoft.ML.IDataView validationSet = default, Microsoft.ML.TorchSharp.NasBert.BertArchitecture architecture = Microsoft.ML.TorchSharp.NasBert.BertArchitecture.Roberta);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer TextClassification(class Microsoft.ML.MulticlassClassificationCatalog/MulticlassClassificationTrainers catalog, string labelColumnName, string outputColumnName, string sentence1ColumnName, string sentence2ColumnName, int32 numberOfClasses, int32 batchSize, int32 maxEpochs, int32 maxUpdates, class Microsoft.ML.IDataView validationSet, valuetype Microsoft.ML.TorchSharp.NasBert.BertArchitecture architecture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ML.TorchSharp.TorchSharpCatalog.TextClassification(Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.ML.IDataView,Microsoft.ML.TorchSharp.NasBert.BertArchitecture)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextClassification (catalog As MulticlassClassificationCatalog.MulticlassClassificationTrainers, Optional labelColumnName As String = &quot;Label&quot;, Optional outputColumnName As String = &quot;PredictedLabel&quot;, Optional sentence1ColumnName As String = &quot;Sentence1&quot;, Optional sentence2ColumnName As String = Nothing, Optional numberOfClasses As Integer = 2, Optional batchSize As Integer = 32, Optional maxEpochs As Integer = 10, Optional maxUpdates As Integer = 2147483647, Optional validationSet As IDataView = Nothing, Optional architecture As BertArchitecture = Microsoft.ML.TorchSharp.NasBert.BertArchitecture.Roberta) As TextClassificationTrainer" />
      <MemberSignature Language="F#" Value="static member TextClassification : Microsoft.ML.MulticlassClassificationCatalog.MulticlassClassificationTrainers * string * string * string * string * int * int * int * int * Microsoft.ML.IDataView * Microsoft.ML.TorchSharp.NasBert.BertArchitecture -&gt; Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer" Usage="Microsoft.ML.TorchSharp.TorchSharpCatalog.TextClassification (catalog, labelColumnName, outputColumnName, sentence1ColumnName, sentence2ColumnName, numberOfClasses, batchSize, maxEpochs, maxUpdates, validationSet, architecture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ML.TorchSharp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="Microsoft.ML.MulticlassClassificationCatalog+MulticlassClassificationTrainers" RefType="this" />
        <Parameter Name="labelColumnName" Type="System.String" />
        <Parameter Name="outputColumnName" Type="System.String" />
        <Parameter Name="sentence1ColumnName" Type="System.String" />
        <Parameter Name="sentence2ColumnName" Type="System.String" />
        <Parameter Name="numberOfClasses" Type="System.Int32" />
        <Parameter Name="batchSize" Type="System.Int32" />
        <Parameter Name="maxEpochs" Type="System.Int32" />
        <Parameter Name="maxUpdates" Type="System.Int32" />
        <Parameter Name="validationSet" Type="Microsoft.ML.IDataView" />
        <Parameter Name="architecture" Type="Microsoft.ML.TorchSharp.NasBert.BertArchitecture" />
      </Parameters>
      <Docs>
        <param name="catalog">The transform's catalog.</param>
        <param name="labelColumnName">Name of the label column. Column should be of type Int64.</param>
        <param name="outputColumnName">Name of the output column. It will be of type Double. It is the predicted label.</param>
        <param name="sentence1ColumnName">Name of the column for the first sentence.</param>
        <param name="sentence2ColumnName">Name of the column for the second sentence. Only required if your NLP classification requires sentence pairs.</param>
        <param name="numberOfClasses">Number of classes to train on.</param>
        <param name="batchSize">Number of rows in the batch.</param>
        <param name="maxEpochs">Maximum number of times to loop through your training set.</param>
        <param name="maxUpdates">Maximum number of batches to run. Will stop training when this number is hit.</param>
        <param name="validationSet">The validation set used while training to improve model quality.</param>
        <param name="architecture">Architecture for the model. Defaults to Roberta.</param>
        <summary>
            Fine tune a NAS-BERT model for NLP classification.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
